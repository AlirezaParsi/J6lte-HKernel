name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Prepare the build environment
      run: |
        git clone https://github.com/pkm774/android-kernel-tools ./tools
        echo "tools-folder=$(pwd)/tools" >> $GITHUB_OUTPUT
      working-directory: ${{ steps.workspace.outputs.workspace-folder }}
      id: tools
    - name: Building kernel
      run: |
        export PATH="${{ steps.tools.outputs.tools-folder }}/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/bin:$PATH"
        export PATH="${{ steps.tools.outputs.tools-folder }}/gcc/linux-x86/arm/arm-linux-androideabi-4.9/bin:$PATH"
        export PATH="${{ steps.tools.outputs.tools-folder }}/clang/host/linux-x86/clang-r428724/bin:$PATH"
        export LD_LIBRARY_PATH="${{ steps.tools.outputs.tools-folder }}/clang/host/linux-x86/clang-r428724/lib64:$LD_LIBRARY_PATH"
        
        export ARCH=arm64
        export SUBARCH=ARM64
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export CROSS_COMPILE=aarch64-linux-android-
        export CROSS_COMPILE_ARM32=arm-linux-androideabi-
        ./build_kernel.sh
        working-directory: ${{ steps.kernel.outputs.kernel-folder }}
      id: build
     - name: Adding KernelSU
      if: ${{ github.event.inputs.ENABLE_KERNELSU == 'Yes' }}
      run: |
        # Delete old KernelSU
        if [ -d "./KernelSU" ]; then
          rm -rf "./KernelSU"
        fi
        if [ -d "./drivers/kernelsu" ]; then
          rm -rf "./drivers/kernelsu"
        fi

        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
      - name: AnyKernel3
      if: ${{ success() }}
      continue-on-error: true
      run: |
        git clone --recursive --depth=1 -j $(nproc) https://github.com/itisFarzin/AnyKernel3

        if [ -e "Image.gz-dtb" ]; then
          cp -f Image.gz-dtb ./AnyKernel3/
        fi
        
        cd AnyKernel3
        zip -q -r "j6.zip" *
     working-directory: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/
      - name: Check the output directory before uploading
      run: |
        ls -al ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/
      - uses: actions/upload-artifact@v3
      if: ${{ success() }}
      with:
        name: j6.zip
        path: ${{ steps.kernel.outputs.kernel-folder }}/out/arch/arm64/boot/AnyKernel3/j6.zip
    
